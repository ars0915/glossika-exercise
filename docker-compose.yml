version: "3"

services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - APP_NAME=glossika-exercise
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis-cluster-creator
  mysql:
    container_name: glossika-mysql
    image: mysql:8.0
    ports:
      - 3306:3306
    volumes:
      - ~/apps/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=1qaz2wsx
      - MYSQL_USER=glossika
      - MYSQL_PASSWORD=1qaz2wsx
      - MYSQL_DATABASE=glossika
  redis-node1:
    container_name: glossika-redis1
    build:
      context: ./docker/redis
      dockerfile: DockerFile
    ports:
      - "7000:7000"
      - "17000:17000"
    restart: always
    entrypoint: [redis-server, /etc/redis/redis.conf, --port,"7000", --cluster-announce-ip,"${ip}"]
  redis-node2:
    container_name: glossika-redis2
    build:
      context: ./docker/redis
      dockerfile: DockerFile
    ports:
      - "7001:7001"
      - "17001:17001"
    restart: always
    entrypoint: [redis-server, /etc/redis/redis.conf,--port,"7001",--cluster-announce-ip,"${ip}"]
  redis-node3:
    container_name: glossika-redis3
    build:
      context: ./docker/redis
      dockerfile: DockerFile
    ports:
      - "7002:7002"
      - "17002:17002"
    restart: always
    entrypoint: [redis-server, /etc/redis/redis.conf,--port,"7002",--cluster-announce-ip,"${ip}"]
  redis-cluster-creator:
    image: redis:6.0.3
    entrypoint: [/bin/sh,-c,'echo "yes" | redis-cli --cluster create ${ip}:7000 ${ip}:7001 ${ip}:7002 --cluster-replicas 1']
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3